{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport cookie from 'js-cookie';\nexport var signup = function signup(user) {\n  return fetch(\"\".concat(API, \"/signup\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (error) {\n    return console.log(error);\n  });\n};\nexport var signin = function signin(user) {\n  return fetch(\"\".concat(API, \"/signin\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (error) {\n    return console.log(error);\n  });\n};\nexport var signout = function signout(next) {\n  removeCookie('token');\n  removeLocalStoreage('user');\n  next();\n  return fetch(\"\".concat(API, \"/signout\"), {\n    method: 'GET'\n  }).then(function (response) {\n    console.log('signout successful');\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var setCookie = function setCookie(key, value) {\n  if (true) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport var removeCookie = function removeCookie(key) {\n  if (true) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n};\nexport var getCookie = function getCookie(key) {\n  if (true) {\n    cookie.get(key);\n  }\n};\nexport var setLocalStorage = function setLocalStorage(key, value) {\n  if (true) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\nexport var removeStorage = function removeStorage(key) {\n  if (true) {\n    localstorage.removeItem(key);\n  }\n};\nexport var authenticate = function authenticate(data, next) {\n  setCookie('token', data.token);\n  setLocalStorage('user', data.user);\n  next();\n};\nexport var isAuth = function isAuth() {\n  if (true) {\n    var cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStoreage.getItem('user')) {\n        return JSON.parse(localStore.getItem('user'));\n      } else {\n        return false;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["D:/mern_starter/frontend/actions/auth.js"],"names":["fetch","API","cookie","signup","user","method","headers","Accept","body","JSON","stringify","then","response","json","error","console","log","signin","signout","next","removeCookie","removeLocalStoreage","err","setCookie","key","value","set","expires","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeStorage","localstorage","removeItem","authenticate","data","token","isAuth","cookieChecked","localStoreage","getItem","parse","localStore"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\nimport cookie from 'js-cookie';\r\n\r\nexport const signup = user => {\r\n  return fetch(`${API}/signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(user)\r\n  })\r\n      .then(response => {\r\n          return response.json();\r\n      })\r\n      .catch(error => console.log(error));\r\n};\r\n\r\nexport const signin = user => {\r\n  return fetch(`${API}/signin`, {\r\n      method: 'POST',\r\n      headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(user)\r\n  })\r\n      .then(response => {\r\n          return response.json();\r\n      })\r\n      .catch(error => console.log(error));\r\n};\r\n\r\nexport const signout = (next) => {\r\n  removeCookie('token')\r\n  removeLocalStoreage('user')\r\n  next()\r\n  return fetch(`${API}/signout`, {\r\n    method: 'GET'\r\n  })\r\n  .then(response => {\r\n    console.log('signout successful')\r\n  })\r\n  .catch(err => console.log(err))\r\n}\r\n\r\nexport const setCookie = (key, value) => {\r\n  if(process.browser) {\r\n    cookie.set(key, value, {\r\n      expires: 1\r\n    })\r\n  }\r\n}\r\n\r\nexport const removeCookie = (key) => {\r\n  if(process.browser) {\r\n    cookie.remove(key, {\r\n      expires: 1\r\n    })\r\n  }\r\n}\r\n\r\nexport const getCookie = (key) => {\r\n  if(process.browser) {\r\n    cookie.get(key)\r\n  }\r\n}\r\n\r\nexport const setLocalStorage = (key, value) => {\r\n  if(process.browser) {\r\n    localStorage.setItem(key, JSON.stringify(value))\r\n  }\r\n}\r\n\r\nexport const removeStorage = (key) => {\r\n  if(process.browser) {\r\n    localstorage.removeItem(key)\r\n  }\r\n}\r\n\r\nexport const authenticate = (data, next) => {\r\n  setCookie('token', data.token)\r\n  setLocalStorage('user', data.user)\r\n  next()\r\n}\r\n\r\nexport const isAuth = () => {\r\n  if(process.browser) {\r\n    const cookieChecked = getCookie('token')\r\n    if(cookieChecked) {\r\n      if(localStoreage.getItem('user')){\r\n        return JSON.parse(localStore.getItem('user'))\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}