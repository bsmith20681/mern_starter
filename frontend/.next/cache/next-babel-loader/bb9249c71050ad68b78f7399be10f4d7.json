{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport cookie from 'js-cookie';\nexport var signup = function signup(user) {\n  return fetch(\"\".concat(API, \"/signup\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (error) {\n    return console.log(error);\n  });\n};\nexport var signin = function signin(user) {\n  return fetch(\"\".concat(API, \"/signin\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (error) {\n    return console.log(error);\n  });\n};\nexport var setCookie = function setCookie(key, value) {\n  if (true) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport var removeCookie = function removeCookie(key) {\n  if (true) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n};\nexport var getCookie = function getCookie(key) {\n  if (true) {\n    cookie.get(key);\n  }\n};\nexport var setLocalStorage = function setLocalStorage(key, value) {\n  if (true) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\nexport var removeStorage = function removeStorage(key) {\n  if (true) {\n    localstorage.removeItem(key);\n  }\n};\nexport var authenticate = function authenticate(data, next) {\n  setCookie('token', data.token);\n  setLocalStorage('user', data.user);\n  next();\n};\nexport var isAuth = function isAuth() {\n  if (true) {\n    var cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStoreage.getItem('user')) {\n        return JSON.parse(localStore.getItem('user'));\n      } else {\n        return false;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["D:/mern_starter/frontend/actions/auth.js"],"names":["fetch","API","cookie","signup","user","method","headers","Accept","body","JSON","stringify","then","response","json","error","console","log","signin","setCookie","key","value","set","expires","removeCookie","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeStorage","localstorage","removeItem","authenticate","data","next","token","isAuth","cookieChecked","localStoreage","getItem","parse","localStore"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\nimport cookie from 'js-cookie';\r\n\r\nexport const signup = user => {\r\n  return fetch(`${API}/signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(user)\r\n  })\r\n      .then(response => {\r\n          return response.json();\r\n      })\r\n      .catch(error => console.log(error));\r\n};\r\n\r\nexport const signin = user => {\r\n  return fetch(`${API}/signin`, {\r\n      method: 'POST',\r\n      headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(user)\r\n  })\r\n      .then(response => {\r\n          return response.json();\r\n      })\r\n      .catch(error => console.log(error));\r\n};\r\n\r\nexport const setCookie = (key, value) => {\r\n  if(process.browser) {\r\n    cookie.set(key, value, {\r\n      expires: 1\r\n    })\r\n  }\r\n}\r\n\r\nexport const removeCookie = (key) => {\r\n  if(process.browser) {\r\n    cookie.remove(key, {\r\n      expires: 1\r\n    })\r\n  }\r\n}\r\n\r\nexport const getCookie = (key) => {\r\n  if(process.browser) {\r\n    cookie.get(key)\r\n  }\r\n}\r\n\r\nexport const setLocalStorage = (key, value) => {\r\n  if(process.browser) {\r\n    localStorage.setItem(key, JSON.stringify(value))\r\n  }\r\n}\r\n\r\nexport const removeStorage = (key) => {\r\n  if(process.browser) {\r\n    localstorage.removeItem(key)\r\n  }\r\n}\r\n\r\nexport const authenticate = (data, next) => {\r\n  setCookie('token', data.token)\r\n  setLocalStorage('user', data.user)\r\n  next()\r\n}\r\n\r\nexport const isAuth = () => {\r\n  if(process.browser) {\r\n    const cookieChecked = getCookie('token')\r\n    if(cookieChecked) {\r\n      if(localStoreage.getItem('user')){\r\n        return JSON.parse(localStore.getItem('user'))\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}